const { FusesPlugin } = require('@electron-forge/plugin-fuses');
const { FuseV1Options, FuseVersion } = require('@electron/fuses');
const path = require('path');
const fs = require('fs');

module.exports = {
  hooks: {
    prePackage: async () => {
      console.log('Checking build files...');
      const buildPath = path.join(__dirname, 'build');
      if (!fs.existsSync(buildPath)) {
        throw new Error('Build directory not found! Please run "npm run build" first.');
      }
      
      const indexPath = path.join(buildPath, 'index.html');
      const pillPath = path.join(buildPath, 'pill.html');
      
      if (!fs.existsSync(indexPath) || !fs.existsSync(pillPath)) {
        throw new Error('Build files not found! Please run "npm run build" first.');
      }
      
      console.log('Build files found, proceeding with packaging...');
    }
  },
  packagerConfig: {
    asar: {
      unpack: '**/{node_modules/whisper-node/**,node_modules/fluent-ffmpeg/**,node_modules/node-llama-cpp/**,*.node}'
    },
    prune: true,
    ignore: [
      /^\/\./,
      /^\/node_modules\/\.bin/,
      /^\/src\/react\//,
      /^\/src\/assets\/.*\.iconset/,
      /^\/public\//,
      /^\/scripts\//,
      /^\/docs\//,
      /^\/test\//,
      /^\/tests\//,
      /^\/spec\//,
      /^\/\.git\//,
      /^\/\.github\//,
      /^\/\.vscode\//,
      /^\/out\//,
      /^\/dist\//,
      /\.map$/,
      /\.ts$/,
      /\.tsx$/,
      /\.jsx$/,
      /\.md$/,
      /\.yml$/,
      /\.yaml$/,
      /\.log$/,
      /\.lock$/,
      /^\/forge\.config\.js$/,
      /^\/webpack\..*\.js$/,
      /^\/rollup\..*\.js$/,
      /^\/vite\..*\.js$/,
      /^\/\.env/,
      /^\/\.eslint/,
      /^\/\.prettier/,
      /^\/jest\./,
      /^\/babel\./,
      /^\/tsconfig\./,
      /^\/tailwind\./,
      /^\/postcss\./,
      /^\/index\.html$/,
      /^\/pill\.html$/,
      /^\/create_dmg_bg\.py$/,
      /^\/buildResources\//,
    ],
    icon: './src/assets/a1-logo',
    osxSign: process.env.MAC_CODESIGN_IDENTITY ? {
      identity: process.env.MAC_CODESIGN_IDENTITY,
      'hardened-runtime': true,
      entitlements: 'entitlements.plist',
      'entitlements-inherit': 'entitlements.plist',
      'gatekeeper-assess': false,
      'signature-flags': 'library',
    } : undefined,
    osxNotarize: process.env.APPLE_ID ? {
      appleId: process.env.APPLE_ID,
      appleIdPassword: process.env.APPLE_ID_PASSWORD,
      teamId: process.env.APPLE_TEAM_ID,
      ascProvider: process.env.APPLE_ASC_PROVIDER,
      appBundleId: 'com.a1.app',
    } : undefined,
  },
  rebuildConfig: {},
  makers: [
    {
      name: '@electron-forge/maker-dmg',
      platforms: ['darwin'],
      config: (arch) => {
        return {
          background: './src/assets/dmg-background.png',
          icon: './src/assets/a1-logo.icns',
          format: 'ULFO',
          overwrite: true,
          contents: [
            {
              x: 130,
              y: 220,
              type: 'file',
              path: `./out/A1-darwin-${arch}/A1.app`,
            },
            {
              x: 410,
              y: 220,
              type: 'link',
              path: '/Applications',
            },
          ],
          window: {
            width: 540,
            height: 380,
          },
          formatOptions: {
            openFolder: false,
          },
        };
      },
    },
    {
      name: '@electron-forge/maker-zip',
      platforms: ['darwin'],
    },
    {
      name: '@electron-forge/maker-squirrel',
      config: {},
    },
    {
      name: '@electron-forge/maker-deb',
      config: {},
    },
    {
      name: '@electron-forge/maker-rpm',
      config: {},
    },
  ],
  plugins: [
    {
      name: '@electron-forge/plugin-auto-unpack-natives',
      config: {},
    },
    new FusesPlugin({
      version: FuseVersion.V1,
      [FuseV1Options.RunAsNode]: false,
      [FuseV1Options.EnableCookieEncryption]: true,
      [FuseV1Options.EnableNodeOptionsEnvironmentVariable]: false,
      [FuseV1Options.EnableNodeCliInspectArguments]: false,
      [FuseV1Options.EnableEmbeddedAsarIntegrityValidation]: true,
      [FuseV1Options.OnlyLoadAppFromAsar]: true,
    }),
  ],
};